import React, { useState, useEffect } from "react";

import Main from "./Main";

import { api } from "../utils/api";

const Trends = ({ limit }) => {
  const textsList = [
    "–ù–∞–¥–æ –±–æ–ª—å—à–µ –≥–∏—Ñ–æ–∫!",
    "–ê –º–æ–∂–Ω–æ –µ—â–µ —á—É—Ç—å-—á—É—Ç—å? ü•∫",
    "–ì–∏—Ñ–æ–∫ –º–Ω–æ–≥–æ –Ω–µ –±—ã–≤–∞–µ—Ç! üòà",
    "–°–ª–µ–¥—É—é—â–∏–µ!",
  ];

  const [gifs, setGifs] = useState([]);
  const [offset, setOffset] = useState(0);
  const [isLoading, setIsLoading] = useState(false);
  const [buttonText, setButtonText] = useState(textsList[0]);

  function handleNextButtonClick() {
    setOffset((prev) => prev + limit);
  }

  useEffect(() => {
    setIsLoading(true);
    api
      .trendingGifs(limit, offset)
      .then((newGifs) => {
        setGifs([
          ...gifs,
          ...newGifs.data.map((item) => ({
            id: item.id,
            alt: item.title,
            src: item.images.original.url,
          })),
        ]);
      })
      .catch(console.error)
      .finally(() => {
        setIsLoading(false);
      });

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const currentPage = offset / limit;
    setButtonText(textsList[Math.min(currentPage, textsList.length - 1)]);
    // eslint-disable-next-line
  }, [offset]);

  return gifs.length ? (
    <Main
      gifs={gifs}
      onNextButtonClick={handleNextButtonClick}
      buttonText={buttonText}
      isLoading={isLoading}
    />
  ) : (
    <div className="loading">
      <span className="spinner spinner_black spinner_size_L"></span>;
    </div>
  );
};

export default Trends;
